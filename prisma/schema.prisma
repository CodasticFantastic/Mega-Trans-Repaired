// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum OrderType {
  Zwrot
  Odbior
  Dostawa
}

enum Status {
  Producent
  Magazyn
  Dostawa
  Pobranie
  Zrealizowane
  Anulowane
}

enum CommodityType {
  Paczka
  Gabaryt
  Paleta
}

enum CommodityPaymentType {
  Pobranie
  Przelew
}

model User {
  id        Int      @id @default(autoincrement())
  company   String
  email     String   @unique
  phone     String
  password  String
  nip       String
  country   String
  city      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  orders    Order[]
  role      Role     @default(USER)
}

model Driver {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  role      Role     @default(DRIVER)
}

model Order{
  orderId   String      @id @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  status    Status   @default(Producent)
  orderType OrderType 
  orderCountry String
  orderStreet String
  orderStreetNumber String
  orderFlatNumber String?
  orderCity String
  orderPostCode String
  orderState String
  orderNote String?
  recipientName String
  recipientPhone String
  recipientEmail String
  packages  Package[]
  currency String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Package {
  packageId String      @id @unique
  belongsTo  Order    @relation(fields: [orderId], references: [orderId])
  orderId   String
  commodityType CommodityType 
  commodityName String
  commodityPaymentType CommodityPaymentType
  commodityPrice Int?
  commodityNote String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}



